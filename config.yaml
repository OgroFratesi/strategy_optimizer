# An unique identifier for the head node and workers of this cluster.
cluster_name: minimal

# Cloud-provider specific configuration.
provider:
    type: aws
    region: us-west-2

min_workers: 3
max_workers: 8

# available_node_types:
#   ray.head.default:
#       node_config:
#         InstanceType: m5.large
#         BlockDeviceMappings:
#             - DeviceName: /dev/sda1
#               Ebs:
#                   VolumeSize: 140
#       resources: {"CPU": 2}
#   ray.worker.default:
#       node_config:
#         InstanceType: m5.large
#         InstanceMarketOptions:
#             MarketType: spot
#       resources: {"CPU": 2}
#       min_workers: 3
# This executes all commands on all nodes in the docker container,
# and opens all the necessary ports to support the Ray cluster.
# Empty string means disabled.
docker:
    image: "rayproject/ray-ml:latest-gpu" # You can change this to latest-cpu if you don't need GPU support and want a faster startup
    # image: rayproject/ray:latest-cpu   # use this one if you don't need ML dependencies, it's faster to pull
    container_name: "ray_container"
    # If true, pulls latest version of image. Otherwise, `docker run` will only pull the image
    # if no cached version is present.
    pull_before_run: True
    run_options:   # Extra options to pass into "docker run"
        - --ulimit nofile=65536:65536

    # Example of running a GPU head with CPU workers
    # head_image: "rayproject/ray-ml:latest-gpu"
    # Allow Ray to automatically detect GPUs

    # worker_image: "rayproject/ray-ml:latest-cpu"
    # worker_run_options: []
setup_commands:
    - pip install backtrader
    - pip install hyperopt==0.2.7
    - pip install numpy
    - pip install pandas
#     - pip install qgrid==1.3.1
    - pip install -U "ray[default]"
    - pip install scipy
#     - pip install vectorbt==0.24.5
    - pip install yfinance
